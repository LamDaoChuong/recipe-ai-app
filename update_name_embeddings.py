import os
from sqlalchemy import create_engine, text
from sentence_transformers import SentenceTransformer
from dotenv import load_dotenv

# Load bi·∫øn m√¥i tr∆∞·ªùng (DB_URL t·ª´ .env ho·∫∑c st.secrets)
load_dotenv()
DB_URL = os.getenv("DB_URL") or os.getenv("DATABASE_URL")

if not DB_URL:
    raise ValueError("‚ùå Kh√¥ng t√¨m th·∫•y DB_URL trong .env")

# K·∫øt n·ªëi database
engine = create_engine(DB_URL)

# Load model embedding
model = SentenceTransformer("sentence-transformers/all-MiniLM-L6-v2")

# L·∫•y danh s√°ch id + ten_mon
with engine.connect() as conn:
    rows = conn.execute(text("SELECT id, ten_mon FROM recipes WHERE embedding_name IS NULL")).fetchall()

print(f"üîÑ T√¨m th·∫•y {len(rows)} m√≥n ƒÉn c·∫ßn c·∫≠p nh·∫≠t embedding...")

# C·∫≠p nh·∫≠t t·ª´ng d√≤ng
with engine.begin() as conn:  # begin() ƒë·ªÉ auto commit
    for row in rows:
        embedding = model.encode(row.ten_mon).tolist()
        conn.execute(
            text("UPDATE recipes SET embedding_name = :embedding WHERE id = :id"),
            {"embedding": embedding, "id": row.id}
        )

print("‚úÖ Ho√†n th√†nh c·∫≠p nh·∫≠t embedding cho t√™n m√≥n.")
